<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-11T09:00:21 IST" name="AthmaTestSuite" finished-at="2022-01-11T09:05:00 IST" duration-ms="279147">
    <groups>
    </groups>
    <test started-at="2022-01-11T09:00:21 IST" name="AthmaTest" finished-at="2022-01-11T09:05:00 IST" duration-ms="279147">
      <class name="com.athma.qa.testcases.NewRegistrationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:00:22 IST" name="setup" finished-at="2022-01-11T09:00:37 IST" duration-ms="14922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:00:37 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:00:55 IST" duration-ms="18497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:00:55 IST" name="teardown" finished-at="2022-01-11T09:00:56 IST" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:00:56 IST" name="setup" finished-at="2022-01-11T09:01:08 IST" duration-ms="11786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:08 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:01:17 IST" duration-ms="9052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:17 IST" name="teardown" finished-at="2022-01-11T09:01:18 IST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:18 IST" name="setup" finished-at="2022-01-11T09:01:35 IST" duration-ms="17041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:35 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:01:44 IST" duration-ms="8672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:44 IST" name="teardown" finished-at="2022-01-11T09:01:45 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:01:45 IST" name="setup" finished-at="2022-01-11T09:02:07 IST" duration-ms="21776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:07 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:02:15 IST" duration-ms="8458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika44]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:15 IST" name="teardown" finished-at="2022-01-11T09:02:16 IST" duration-ms="1281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:16 IST" name="setup" finished-at="2022-01-11T09:02:46 IST" duration-ms="29839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:46 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:02:54 IST" duration-ms="8100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:54 IST" name="teardown" finished-at="2022-01-11T09:02:55 IST" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:02:55 IST" name="setup" finished-at="2022-01-11T09:03:14 IST" duration-ms="18790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:14 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:03:23 IST" duration-ms="8814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika66]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:23 IST" name="teardown" finished-at="2022-01-11T09:03:24 IST" duration-ms="1013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:24 IST" name="setup" finished-at="2022-01-11T09:03:46 IST" duration-ms="22350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:46 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:03:56 IST" duration-ms="10525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:56 IST" name="teardown" finished-at="2022-01-11T09:03:57 IST" duration-ms="1030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:03:57 IST" name="setup" finished-at="2022-01-11T09:04:13 IST" duration-ms="15668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:13 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:04:21 IST" duration-ms="8167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika88]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:21 IST" name="teardown" finished-at="2022-01-11T09:04:23 IST" duration-ms="1199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:23 IST" name="setup" finished-at="2022-01-11T09:04:37 IST" duration-ms="14055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:37 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:04:45 IST" duration-ms="8504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:45 IST" name="teardown" finished-at="2022-01-11T09:04:47 IST" duration-ms="1648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:04:47 IST" name="setup" finished-at="2022-01-11T09:05:00 IST" duration-ms="13366" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a class="sb-subitems-link" href="https://sqa.narayanahealth.org:7076/patient-registration" ng-reflect-ng-class="[object Object]">...</a> is not clickable at point (135, 24). Other element would receive the click: <span>...</span>
  (Session info: chrome=97.0.4692.71)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CORPLPW000052', ip: '10.120.1.132', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\339154\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56830}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: bc228226f71a63787547acce0d2975c6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a class="sb-subitems-link" href="https://sqa.narayanahealth.org:7076/patient-registration" ng-reflect-ng-class="[object Object]">...</a> is not clickable at point (135, 24). Other element would receive the click: <span>...</span>
  (Session info: chrome=97.0.4692.71)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CORPLPW000052', ip: '10.120.1.132', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\339154\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56830}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: bc228226f71a63787547acce0d2975c6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at com.athma.qa.pages.HomePage.clickonPatientregistrationsubmenu(HomePage.java:50)
at com.athma.qa.testcases.NewRegistrationTest.setup(NewRegistrationTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="multipleregisterpatientTest(java.lang.String,java.lang.String)[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:05:00 IST" name="multipleregisterpatientTest" data-provider="getpatientdata" finished-at="2022-01-11T09:05:00 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Karthika100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a class="sb-subitems-link" href="https://sqa.narayanahealth.org:7076/patient-registration" ng-reflect-ng-class="[object Object]">...</a> is not clickable at point (135, 24). Other element would receive the click: <span>...</span>
  (Session info: chrome=97.0.4692.71)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CORPLPW000052', ip: '10.120.1.132', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\339154\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56830}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: bc228226f71a63787547acce0d2975c6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a class="sb-subitems-link" href="https://sqa.narayanahealth.org:7076/patient-registration" ng-reflect-ng-class="[object Object]">...</a> is not clickable at point (135, 24). Other element would receive the click: <span>...</span>
  (Session info: chrome=97.0.4692.71)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CORPLPW000052', ip: '10.120.1.132', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\339154\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:56830}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: bc228226f71a63787547acce0d2975c6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at com.athma.qa.pages.HomePage.clickonPatientregistrationsubmenu(HomePage.java:50)
at com.athma.qa.testcases.NewRegistrationTest.setup(NewRegistrationTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleregisterpatientTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.athma.qa.testcases.NewRegistrationTest@4e5ed836]" started-at="2022-01-11T09:05:00 IST" name="teardown" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1641872100592" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.athma.qa.testcases.NewRegistrationTest -->
    </test> <!-- AthmaTest -->
  </suite> <!-- AthmaTestSuite -->
</testng-results>
